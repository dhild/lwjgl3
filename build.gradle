/*
 * Copyright LWJGL. All rights reserved.
 * License terms: http://lwjgl.org/license.php
 */

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.11.91'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.6
targetCompatibility = 1.6

sourceSets {
    main {
        java {
            srcDirs = ['src/core', 'generated/java']
        }
    }
    templates {
        java {
            srcDirs = ['src/templates', 'config']
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    kotlinRuntime
}

repositories {
    mavenCentral()
}

dependencies {
    templatesCompile 'org.jetbrains.kotlin:kotlin-stdlib:0.11.91'
    kotlinRuntime 'org.jetbrains.kotlin:kotlin-runtime:0.11.91'
    templatesCompile files("${System.properties['java.home']}/../lib/tools.jar")
    compile files("${System.properties['java.home']}/../lib/tools.jar")
}

sourceSets.main.compileClasspath += sourceSets.templates.output

task generate(type: JavaExec) {
    dependsOn 'compileTemplatesJava'
    dependsOn 'compileTemplatesKotlin'
    classpath configurations.templatesCompile
    classpath configurations.kotlinRuntime
    classpath sourceSets.templates.output.classesDir
    main = "org.lwjgl.generator.GeneratorPackage"

    args "${file('src/templates')}"
    args "${file('generated')}"
}

compileJava.dependsOn 'generate'

